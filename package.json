{
  "name": "next-test-api-route-handler",
  "version": "1.0.6",
  "description": "Confidently unit test your Next.js API routes/handlers in an isolated Next.js-like environment",
  "keywords": [
    "api",
    "route",
    "next",
    "unit",
    "test",
    "endpoint",
    "testing",
    "nextjs",
    "next.js",
    "handler",
    "request",
    "response",
    "jest"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/Xunnamius/next-test-api-route-handler"
  },
  "license": "Unlicense",
  "author": "Xunnamius",
  "sideEffects": false,
  "main": "dist/umd.js",
  "module": "dist/modules/index.js",
  "types": "dist/modules/index.d.ts",
  "files": [
    "/dist",
    "/LICENSE",
    "/package.json",
    "/README.md"
  ],
  "scripts": {
    "build": "npm run clean && tsc --project tsconfig.types.json && NODE_ENV=production webpack -p --config-name umd && babel src --extensions .ts --out-dir dist/modules",
    "build-docs": "rm -rf tmp-docs tmp-docs-diff docs-diff && typedoc --plugin typedoc-plugin-markdown --out tmp-docs --readme none --mode library src/index.ts > /dev/null && find tmp-docs -name '*.md' -exec sed -i -e 's/`__namedParameters`: //g' {} + && find tmp-docs -name '*.md' -exec sed -i -e 's/__namedParameters/\\(destructured\\)/g' {} + && sed -i -e 1,4d tmp-docs/README.md && cp -rf tmp-docs tmp-docs-diff && cp -rf docs docs-diff && find docs-diff -name '*.md' -exec sed -i '/^\\*Defined in \\[.*\\]\\(.*\\)\\*$/d' {} + && find tmp-docs-diff -name '*.md' -exec sed -i '/^\\*Defined in \\[.*\\]\\(.*\\)\\*$/d' {} +; [ $? -ne 0 ] && echo 'build failed (try `npm run check-types`)' && rm -rf tmp-docs tmp-docs-diff docs-diff && exit 1; if [ \"$(find ./docs-diff -type f -print0 | xargs -0 sha1sum | awk '{print $1}' | sha1sum)\" = \"$(find ./tmp-docs-diff -type f -print0 | xargs -0 sha1sum | awk '{print $1}' | sha1sum)\" ]; then echo 'no rebuild necessary'; else rm -r docs && mv tmp-docs docs && echo 'build successful'; fi; rm -rf tmp-docs tmp-docs-diff docs-diff",
    "build-externals": "NODE_ENV=production webpack -p --config-name externals",
    "check-types": "rm -f npm.pipe; touch npm.pipe; command -v unbuffer >/dev/null; X=$?; [ $X -eq 0 ] && unbuffer tsc >> npm.pipe; Y=$?; [ $Y -eq 0 ] && echo >> npm.pipe; unbuffer eslint . >> npm.pipe; Z=$?; [ $X -ne 0 ] && tsc >> npm.pipe && eslint . >> npm.pipe; W=$?; cat npm.pipe | less -R -FX; rm npm.pipe; [ $W -eq 0 ] && [ $X -eq 1 ] || [ $X -eq 0 ] && [ $Y -eq 0 ] && [ $Z -eq 0 ]",
    "clean": "rm -rf dist npm.pipe external-scripts/bin",
    "list-tasks": "npm run",
    "prepublishOnly": "npm run build",
    "postpublish": "npm run clean",
    "publishGuard": "npx sort-package-json && npm run build-docs && npm run check-types && npm run test",
    "repl": "command -v rlwrap >/dev/null && rlwrap npx -p @babel/core -p @babel/node babel-node",
    "test": "BABEL_ENV=test jest --coverage"
  },
  "dependencies": {
    "isomorphic-unfetch": "^3.1.0",
    "next": "9.5.5",
    "test-listen": "^1.1.0"
  },
  "devDependencies": {
    "@babel/cli": "^7.11.6",
    "@babel/core": "^7.11.6",
    "@babel/plugin-proposal-class-properties": "^7.10.4",
    "@babel/plugin-proposal-decorators": "^7.10.5",
    "@babel/plugin-proposal-export-default-from": "^7.10.4",
    "@babel/plugin-proposal-function-bind": "^7.11.5",
    "@babel/plugin-proposal-json-strings": "^7.10.4",
    "@babel/plugin-proposal-nullish-coalescing-operator": "^7.10.4",
    "@babel/plugin-proposal-numeric-separator": "^7.10.4",
    "@babel/plugin-proposal-optional-chaining": "^7.11.0",
    "@babel/plugin-proposal-throw-expressions": "^7.10.4",
    "@babel/preset-env": "^7.11.5",
    "@babel/preset-typescript": "^7.10.4",
    "@octokit/rest": "^18.0.6",
    "@types/edit-json-file": "^1.4.0",
    "@types/find-package-json": "^1.1.1",
    "@types/jest": "^26.0.14",
    "@types/mongodb": "^3.5.27",
    "@types/node": "^14.11.8",
    "@types/shelljs": "^0.8.8",
    "@types/test-listen": "^1.1.0",
    "@typescript-eslint/eslint-plugin": "^4.4.0",
    "@typescript-eslint/parser": "^4.4.0",
    "babel-eslint": "^10.1.0",
    "babel-jest": "^26.5.2",
    "babel-loader": "^8.1.0",
    "babel-plugin-source-map-support": "^2.1.3",
    "copy-webpack-plugin": "^6.2.1",
    "dotenv": "^8.2.0",
    "dotenv-webpack": "^2.0.0",
    "edit-json-file": "^1.4.1",
    "eslint": "^7.11.0",
    "eslint-import-resolver-alias": "^1.1.2",
    "eslint-import-resolver-typescript": "^2.3.0",
    "eslint-plugin-import": "^2.22.1",
    "eslint-plugin-jest": "^24.1.0",
    "eslint-plugin-react": "^7.21.4",
    "expect": "^26.5.3",
    "find-package-json": "^1.2.0",
    "isomorphic-json-fetch": "^1.0.4",
    "jest": "^26.5.2",
    "jest-circus": "^26.5.2",
    "jest-extended": "^0.11.5",
    "mongodb": "^3.6.2",
    "mongodb-client-encryption": "^1.1.0",
    "shelljs": "^0.8.4",
    "source-map-support": "^0.5.19",
    "typedoc": "^0.17.0-3",
    "typedoc-plugin-markdown": "^3.0.7",
    "typescript": "^4.0.3",
    "webpack": "^4.44.2",
    "webpack-cli": "^3.3.12"
  }
}
